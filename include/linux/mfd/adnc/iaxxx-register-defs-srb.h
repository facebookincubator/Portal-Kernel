/*
 * iaxxx-register-defs-srb.h
 *
 * Copyright 2017 Knowles Corporation
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; version 2 of the License.
 *
 *  This program is distributed in the hope that it will be useful, but
 *  WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  General Public License for more details.
 */

/*
 *
 * AUTO-GENERATED BY gen_reg_header. DO NOT EDIT.
 *
 * sw_register_defs_SRB.h
 *
 * This file contains definitions for hardware register fields defined in
 * SRB register yml file. They are automatically extracted by gen_reg.
 *
 */
#ifndef __IAXXX_REGISTER_DEFS_SRB_H__
#define __IAXXX_REGISTER_DEFS_SRB_H__

/*** The base address for this set of registers ***/
#define IAXXX_SRB_REGS_ADDR 0x58000000

/*** SRB_SYS_BLK_UPDATE (0x58000000) ***/
/*
 * Block update for Control Proc
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_ADDR 0x58000000
#define IAXXX_SRB_SYS_BLK_UPDATE_MASK_VAL 0xc000ffff
#define IAXXX_SRB_SYS_BLK_UPDATE_RMASK_VAL 0xc000ffff
#define IAXXX_SRB_SYS_BLK_UPDATE_WMASK_VAL 0xc0000000
#define IAXXX_SRB_SYS_BLK_UPDATE_RESET_VAL 0x00000000

/*
 * Error code that corresponds to the latest block update.
 * ARB error codes are application specific.
 * Error codes for the SRB.
 * 0x0 - No error.
 * 0x1 - Invalid Jump Address (if address is not
 * within the processor's IRAM range).
 * 0x2 - Checksum calculation failed.
 * 0x3 - Memory allocation failed.
 * 0x4 - Memory deallocation failed.
 * 0x5 - Script registration failed.
 * 0x6 - Script execution failed.
 * 0x7 - Script de-registration failed.
 * 0x8 - Event subscription failed.
 * 0x9 - Event trigger failed.
 * 0xA - Event un-subscription failed.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_ERR_CODE_MASK 0x000000ff
#define IAXXX_SRB_SYS_BLK_UPDATE_ERR_CODE_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_ERR_CODE_POS 0
#define IAXXX_SRB_SYS_BLK_UPDATE_ERR_CODE_SIZE 8
#define IAXXX_SRB_SYS_BLK_UPDATE_ERR_CODE_DECL (7 : 0)

/*
 * Index of block that failed the latest block update.
 * Block update always aborts as soon as a block update fails.
 * 0x00 - no block update failure (success).
 * 0x01 - SRB block update failure.
 * 0x80 - ARB 0 block update failure.
 * 0x81 - ARB 1 block update failure.
 * 0x82 - ARB 2 block update failure.
 * 0x9F - ARB 31 block update failure.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_RES_MASK 0x0000ff00
#define IAXXX_SRB_SYS_BLK_UPDATE_RES_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_RES_POS 8
#define IAXXX_SRB_SYS_BLK_UPDATE_RES_SIZE 8
#define IAXXX_SRB_SYS_BLK_UPDATE_RES_DECL (15 : 8)

/*
 * Host sets to request an event notification,
 * when block update is complete.
 * Only available in application mode.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_COMPLETE_EN_MASK 0x40000000
#define IAXXX_SRB_SYS_BLK_UPDATE_COMPLETE_EN_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_COMPLETE_EN_POS 30
#define IAXXX_SRB_SYS_BLK_UPDATE_COMPLETE_EN_SIZE 1
#define IAXXX_SRB_SYS_BLK_UPDATE_COMPLETE_EN_DECL 30

/*
 * Host sets to request a block update.
 * Device clears when update is complete.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_REQ_MASK 0x80000000
#define IAXXX_SRB_SYS_BLK_UPDATE_REQ_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_REQ_POS 31
#define IAXXX_SRB_SYS_BLK_UPDATE_REQ_SIZE 1
#define IAXXX_SRB_SYS_BLK_UPDATE_REQ_DECL 31

/*** SRB_SYS_BLK_UPDATE_1 (0x58000004) ***/
/*
 * Block update 1
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_1_ADDR 0x58000004
#define IAXXX_SRB_SYS_BLK_UPDATE_1_MASK_VAL 0xc000ffff
#define IAXXX_SRB_SYS_BLK_UPDATE_1_RMASK_VAL 0xc000ffff
#define IAXXX_SRB_SYS_BLK_UPDATE_1_WMASK_VAL 0xc0000000
#define IAXXX_SRB_SYS_BLK_UPDATE_1_RESET_VAL 0x00000000

/*
 * Error code that corresponds to the latest block update.
 * ARB error codes are application specific.
 * Error codes for the SRB.
 * 0x0 - No error.
 * 0x1 - Invalid Jump Address (if address is not
 * within the processor's IRAM range).
 * 0x2 - Checksum calculation failed.
 * 0x3 - Memory allocation failed.
 * 0x4 - Memory deallocation failed.
 * 0x5 - Script registration failed.
 * 0x6 - Script execution failed.
 * 0x7 - Script de-registration failed.
 * 0x8 - Event subscription failed.
 * 0x9 - Event trigger failed.
 * 0xA - Event un-subscription failed.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_1_ERR_CODE_MASK 0x000000ff
#define IAXXX_SRB_SYS_BLK_UPDATE_1_ERR_CODE_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_1_ERR_CODE_POS 0
#define IAXXX_SRB_SYS_BLK_UPDATE_1_ERR_CODE_SIZE 8
#define IAXXX_SRB_SYS_BLK_UPDATE_1_ERR_CODE_DECL (7 : 0)

/*
 * Index of block that failed the latest block update.
 * Block update always aborts as soon as a block update fails.
 * 0x00 - no block update failure (success).
 * 0x01 - SRB block update failure.
 * 0x80 - ARB 0 block update failure.
 * 0x81 - ARB 1 block update failure.
 * 0x82 - ARB 2 block update failure.
 * 0x9F - ARB 31 block update failure.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_1_RES_MASK 0x0000ff00
#define IAXXX_SRB_SYS_BLK_UPDATE_1_RES_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_1_RES_POS 8
#define IAXXX_SRB_SYS_BLK_UPDATE_1_RES_SIZE 8
#define IAXXX_SRB_SYS_BLK_UPDATE_1_RES_DECL (15 : 8)

/*
 * Host sets to request an event notification,
 * when block update is complete.
 * Only available in application mode.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_1_COMPLETE_EN_MASK 0x40000000
#define IAXXX_SRB_SYS_BLK_UPDATE_1_COMPLETE_EN_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_1_COMPLETE_EN_POS 30
#define IAXXX_SRB_SYS_BLK_UPDATE_1_COMPLETE_EN_SIZE 1
#define IAXXX_SRB_SYS_BLK_UPDATE_1_COMPLETE_EN_DECL 30

/*
 * Host sets to request a block update.
 * Device clears when update is complete.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_1_REQ_MASK 0x80000000
#define IAXXX_SRB_SYS_BLK_UPDATE_1_REQ_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_1_REQ_POS 31
#define IAXXX_SRB_SYS_BLK_UPDATE_1_REQ_SIZE 1
#define IAXXX_SRB_SYS_BLK_UPDATE_1_REQ_DECL 31

/*** SRB_SYS_BLK_UPDATE_2 (0x58000008) ***/
/*
 * Block update 2
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_2_ADDR 0x58000008
#define IAXXX_SRB_SYS_BLK_UPDATE_2_MASK_VAL 0xc000ffff
#define IAXXX_SRB_SYS_BLK_UPDATE_2_RMASK_VAL 0xc000ffff
#define IAXXX_SRB_SYS_BLK_UPDATE_2_WMASK_VAL 0xc0000000
#define IAXXX_SRB_SYS_BLK_UPDATE_2_RESET_VAL 0x00000000

/*
 * Error code that corresponds to the latest block update.
 * ARB error codes are application specific.
 * Error codes for the SRB.
 * 0x0 - No error.
 * 0x1 - Invalid Jump Address (if address is not
 * within the processor's IRAM range).
 * 0x2 - Checksum calculation failed.
 * 0x3 - Memory allocation failed.
 * 0x4 - Memory deallocation failed.
 * 0x5 - Script registration failed.
 * 0x6 - Script execution failed.
 * 0x7 - Script de-registration failed.
 * 0x8 - Event subscription failed.
 * 0x9 - Event trigger failed.
 * 0xA - Event un-subscription failed.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_2_ERR_CODE_MASK 0x000000ff
#define IAXXX_SRB_SYS_BLK_UPDATE_2_ERR_CODE_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_2_ERR_CODE_POS 0
#define IAXXX_SRB_SYS_BLK_UPDATE_2_ERR_CODE_SIZE 8
#define IAXXX_SRB_SYS_BLK_UPDATE_2_ERR_CODE_DECL (7 : 0)

/*
 * Index of block that failed the latest block update.
 * Block update always aborts as soon as a block update fails.
 * 0x00 - no block update failure (success).
 * 0x01 - SRB block update failure.
 * 0x80 - ARB 0 block update failure.
 * 0x81 - ARB 1 block update failure.
 * 0x82 - ARB 2 block update failure.
 * 0x9F - ARB 31 block update failure.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_2_RES_MASK 0x0000ff00
#define IAXXX_SRB_SYS_BLK_UPDATE_2_RES_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_2_RES_POS 8
#define IAXXX_SRB_SYS_BLK_UPDATE_2_RES_SIZE 8
#define IAXXX_SRB_SYS_BLK_UPDATE_2_RES_DECL (15 : 8)

/*
 * Host sets to request an event notification,
 * when block update is complete.
 * Only available in application mode.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_2_COMPLETE_EN_MASK 0x40000000
#define IAXXX_SRB_SYS_BLK_UPDATE_2_COMPLETE_EN_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_2_COMPLETE_EN_POS 30
#define IAXXX_SRB_SYS_BLK_UPDATE_2_COMPLETE_EN_SIZE 1
#define IAXXX_SRB_SYS_BLK_UPDATE_2_COMPLETE_EN_DECL 30

/*
 * Host sets to request a block update.
 * Device clears when update is complete.
 */
#define IAXXX_SRB_SYS_BLK_UPDATE_2_REQ_MASK 0x80000000
#define IAXXX_SRB_SYS_BLK_UPDATE_2_REQ_RESET_VAL 0x0
#define IAXXX_SRB_SYS_BLK_UPDATE_2_REQ_POS 31
#define IAXXX_SRB_SYS_BLK_UPDATE_2_REQ_SIZE 1
#define IAXXX_SRB_SYS_BLK_UPDATE_2_REQ_DECL 31

/*** SRB_SYS_RESERVED_3 (0x5800000c) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_3_ADDR 0x5800000c
#define IAXXX_SRB_SYS_RESERVED_3_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_3_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_3_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_3_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_4 (0x58000010) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_4_ADDR 0x58000010
#define IAXXX_SRB_SYS_RESERVED_4_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_4_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_4_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_4_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_5 (0x58000014) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_5_ADDR 0x58000014
#define IAXXX_SRB_SYS_RESERVED_5_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_5_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_5_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_5_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_6 (0x58000018) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_6_ADDR 0x58000018
#define IAXXX_SRB_SYS_RESERVED_6_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_6_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_6_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_6_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_7 (0x5800001c) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_7_ADDR 0x5800001c
#define IAXXX_SRB_SYS_RESERVED_7_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_7_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_7_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_7_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_8 (0x58000020) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_8_ADDR 0x58000020
#define IAXXX_SRB_SYS_RESERVED_8_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_8_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_8_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_8_RESET_VAL 0x00000000

/*** SRB_SYS_STATUS (0x58000024) ***/
/*
 * Global system status.
 */
#define IAXXX_SRB_SYS_STATUS_ADDR 0x58000024
#define IAXXX_SRB_SYS_STATUS_MASK_VAL 0x00000003
#define IAXXX_SRB_SYS_STATUS_RMASK_VAL 0x00000003
#define IAXXX_SRB_SYS_STATUS_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_STATUS_RESET_VAL 0x00000000

/*
 * An indication of the current system mode.
 * 0: System is in reset mode.
 * 1: System is currently in bootloader mode.
 * 2: System has entered application mode.
 */
#define IAXXX_SRB_SYS_STATUS_MODE_MASK 0x00000003
#define IAXXX_SRB_SYS_STATUS_MODE_RESET_VAL 0x0
#define IAXXX_SRB_SYS_STATUS_MODE_POS 0
#define IAXXX_SRB_SYS_STATUS_MODE_SIZE 2
#define IAXXX_SRB_SYS_STATUS_MODE_DECL (1 : 0)

/*** SRB_SYS_RESERVED_9 (0x58000028) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_9_ADDR 0x58000028
#define IAXXX_SRB_SYS_RESERVED_9_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_9_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_9_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_9_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_10 (0x5800002c) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_10_ADDR 0x5800002c
#define IAXXX_SRB_SYS_RESERVED_10_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_10_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_10_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_10_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_11 (0x58000030) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_11_ADDR 0x58000030
#define IAXXX_SRB_SYS_RESERVED_11_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_11_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_11_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_11_RESET_VAL 0x00000000

/*** SRB_SYS_DEVICE_ID (0x58000034) ***/
/*
 * Contains the device's identification information.
 */
#define IAXXX_SRB_SYS_DEVICE_ID_ADDR 0x58000034
#define IAXXX_SRB_SYS_DEVICE_ID_MASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_DEVICE_ID_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_DEVICE_ID_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_DEVICE_ID_RESET_VAL 0x00000000

/*
 * Device ID. Each Knowles IA solution contains,
 * registers identifying the product, revision, etc.
 * This register can be used to positively identify
 * the product during initialization.
 */
#define IAXXX_SRB_SYS_DEVICE_ID_REG_MASK 0xffffffff
#define IAXXX_SRB_SYS_DEVICE_ID_REG_RESET_VAL 0x0
#define IAXXX_SRB_SYS_DEVICE_ID_REG_POS 0
#define IAXXX_SRB_SYS_DEVICE_ID_REG_SIZE 32
#define IAXXX_SRB_SYS_DEVICE_ID_REG_DECL (31 : 0)

/*** SRB_SYS_ROM_VER_NUM (0x58000038) ***/
/*
 * Contains the version of the device's firmware in ROM in numeric format.
 */
#define IAXXX_SRB_SYS_ROM_VER_NUM_ADDR 0x58000038
#define IAXXX_SRB_SYS_ROM_VER_NUM_MASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_ROM_VER_NUM_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_ROM_VER_NUM_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_ROM_VER_NUM_RESET_VAL 0x00000000

/*
 * For ROM-based devices - ROM version. Exact format is application specific.
 * For non-ROM devices - unused (set to default).
 */
#define IAXXX_SRB_SYS_ROM_VER_NUM_REG_MASK 0xffffffff
#define IAXXX_SRB_SYS_ROM_VER_NUM_REG_RESET_VAL 0x0
#define IAXXX_SRB_SYS_ROM_VER_NUM_REG_POS 0
#define IAXXX_SRB_SYS_ROM_VER_NUM_REG_SIZE 32
#define IAXXX_SRB_SYS_ROM_VER_NUM_REG_DECL (31 : 0)

/*** SRB_SYS_ROM_VER_STR (0x5800003c) ***/
/*
 * Contains the version of device's firmware in ROM in string format.
 */
#define IAXXX_SRB_SYS_ROM_VER_STR_ADDR 0x5800003c
#define IAXXX_SRB_SYS_ROM_VER_STR_MASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_ROM_VER_STR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_ROM_VER_STR_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_ROM_VER_STR_RESET_VAL 0x00000000

/*
 * Address of null-terminated string that represents the ROM version.
 */
#define IAXXX_SRB_SYS_ROM_VER_STR_REG_MASK 0xffffffff
#define IAXXX_SRB_SYS_ROM_VER_STR_REG_RESET_VAL 0x0
#define IAXXX_SRB_SYS_ROM_VER_STR_REG_POS 0
#define IAXXX_SRB_SYS_ROM_VER_STR_REG_SIZE 32
#define IAXXX_SRB_SYS_ROM_VER_STR_REG_DECL (31 : 0)

/*** SRB_SYS_CFG_VER_NUM (0x58000040) ***/
/*
 * Contains the version of the system configuration in numeric format.
 */
#define IAXXX_SRB_SYS_CFG_VER_NUM_ADDR 0x58000040
#define IAXXX_SRB_SYS_CFG_VER_NUM_MASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_CFG_VER_NUM_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_CFG_VER_NUM_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_CFG_VER_NUM_RESET_VAL 0x00000000

/*
 * System configuration version.
 * Exact format is application specific.
 */
#define IAXXX_SRB_SYS_CFG_VER_NUM_REG_MASK 0xffffffff
#define IAXXX_SRB_SYS_CFG_VER_NUM_REG_RESET_VAL 0x0
#define IAXXX_SRB_SYS_CFG_VER_NUM_REG_POS 0
#define IAXXX_SRB_SYS_CFG_VER_NUM_REG_SIZE 32
#define IAXXX_SRB_SYS_CFG_VER_NUM_REG_DECL (31 : 0)

/*** SRB_SYS_CFG_VER_STR (0x58000044) ***/
/*
 * Contains the version of the system configuration in string format.
 */
#define IAXXX_SRB_SYS_CFG_VER_STR_ADDR 0x58000044
#define IAXXX_SRB_SYS_CFG_VER_STR_MASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_CFG_VER_STR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_CFG_VER_STR_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_CFG_VER_STR_RESET_VAL 0x00000000

/*
 * Address of null-terminated string
 * that represents the system configuration version.
 */
#define IAXXX_SRB_SYS_CFG_VER_STR_REG_MASK 0xffffffff
#define IAXXX_SRB_SYS_CFG_VER_STR_REG_RESET_VAL 0x0
#define IAXXX_SRB_SYS_CFG_VER_STR_REG_POS 0
#define IAXXX_SRB_SYS_CFG_VER_STR_REG_SIZE 32
#define IAXXX_SRB_SYS_CFG_VER_STR_REG_DECL (31 : 0)

/*** SRB_SYS_PATCH_VER_NUM (0x58000048) ***/
/*
 * Contains the version of the firmware patch in numeric format.
 */
#define IAXXX_SRB_SYS_PATCH_VER_NUM_ADDR 0x58000048
#define IAXXX_SRB_SYS_PATCH_VER_NUM_MASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_PATCH_VER_NUM_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_PATCH_VER_NUM_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_PATCH_VER_NUM_RESET_VAL 0x00000000

/*
 * For ROM-based devices - patch version.
 * Exact format is application specific.
 * For non-ROM devices - firmware version.
 */
#define IAXXX_SRB_SYS_PATCH_VER_NUM_REG_MASK 0xffffffff
#define IAXXX_SRB_SYS_PATCH_VER_NUM_REG_RESET_VAL 0x0
#define IAXXX_SRB_SYS_PATCH_VER_NUM_REG_POS 0
#define IAXXX_SRB_SYS_PATCH_VER_NUM_REG_SIZE 32
#define IAXXX_SRB_SYS_PATCH_VER_NUM_REG_DECL (31 : 0)

/*** SRB_SYS_PATCH_VER_STR (0x5800004c) ***/
/*
 * Contains the version of the firmware patch in string format.
 */
#define IAXXX_SRB_SYS_PATCH_VER_STR_ADDR 0x5800004c
#define IAXXX_SRB_SYS_PATCH_VER_STR_MASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_PATCH_VER_STR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SYS_PATCH_VER_STR_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_PATCH_VER_STR_RESET_VAL 0x00000000

/*
 * Address of null-terminated string
 * that represents the patch version.
 */
#define IAXXX_SRB_SYS_PATCH_VER_STR_REG_MASK 0xffffffff
#define IAXXX_SRB_SYS_PATCH_VER_STR_REG_RESET_VAL 0x0
#define IAXXX_SRB_SYS_PATCH_VER_STR_REG_POS 0
#define IAXXX_SRB_SYS_PATCH_VER_STR_REG_SIZE 32
#define IAXXX_SRB_SYS_PATCH_VER_STR_REG_DECL (31 : 0)

/*** SRB_SYS_RESERVED_12 (0x58000050) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_12_ADDR 0x58000050
#define IAXXX_SRB_SYS_RESERVED_12_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_12_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_12_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_12_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_13 (0x58000054) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_13_ADDR 0x58000054
#define IAXXX_SRB_SYS_RESERVED_13_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_13_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_13_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_13_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_14 (0x58000058) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_14_ADDR 0x58000058
#define IAXXX_SRB_SYS_RESERVED_14_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_14_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_14_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_14_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_15 (0x5800005c) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_15_ADDR 0x5800005c
#define IAXXX_SRB_SYS_RESERVED_15_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_15_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_15_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_15_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_16 (0x58000060) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_16_ADDR 0x58000060
#define IAXXX_SRB_SYS_RESERVED_16_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_16_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_16_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_16_RESET_VAL 0x00000000

/*** SRB_SYS_RESERVED_17 (0x58000064) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SYS_RESERVED_17_ADDR 0x58000064
#define IAXXX_SRB_SYS_RESERVED_17_MASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_17_RMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_17_WMASK_VAL 0x00000000
#define IAXXX_SRB_SYS_RESERVED_17_RESET_VAL 0x00000000

/*** PROCESSOR_CRASH_STATUS (0x58000068) ***/
/*
 * Crashed cores status register
 */
#define IAXXX_PROCESSOR_CRASH_STATUS 0x58000068
#define IAXXX_PROCESSOR_CRASH_STATUS_MASK_VAL 0x00000000
#define IAXXX_PROCESSOR_CRASH_STATUS_RMASK_VAL 0x00000000
#define IAXXX_PROCESSOR_CRASH_STATUS_WMASK_VAL 0x00000000
#define IAXXX_PROCESSOR_CRASH_STATUS_RESET_VAL 0x00000000

/*** SRB_BOOT_REQ (0x5800006c) ***/
/*
 * Request bootloader specific operations.
 */
#define IAXXX_SRB_BOOT_REQ_ADDR 0x5800006c
#define IAXXX_SRB_BOOT_REQ_MASK_VAL 0x00000003
#define IAXXX_SRB_BOOT_REQ_RMASK_VAL 0x00000003
#define IAXXX_SRB_BOOT_REQ_WMASK_VAL 0x00000003
#define IAXXX_SRB_BOOT_REQ_RESET_VAL 0x00000000

/*
 * Host sets to request to start application code execution
 * from address provided in JUMP_ADDRESS register.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_BOOT_REQ_JUMP_REQ_MASK 0x00000001
#define IAXXX_SRB_BOOT_REQ_JUMP_REQ_RESET_VAL 0x0
#define IAXXX_SRB_BOOT_REQ_JUMP_REQ_POS 0
#define IAXXX_SRB_BOOT_REQ_JUMP_REQ_SIZE 1
#define IAXXX_SRB_BOOT_REQ_JUMP_REQ_DECL 0

/*
 * Host sets to request internal oscillator calibration.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_BOOT_REQ_INT_OSC_CALIB_REQ_MASK 0x00000002
#define IAXXX_SRB_BOOT_REQ_INT_OSC_CALIB_REQ_RESET_VAL 0x0
#define IAXXX_SRB_BOOT_REQ_INT_OSC_CALIB_REQ_POS 1
#define IAXXX_SRB_BOOT_REQ_INT_OSC_CALIB_REQ_SIZE 1
#define IAXXX_SRB_BOOT_REQ_INT_OSC_CALIB_REQ_DECL 1

/*** SRB_BOOT_JUMP_ADDR (0x58000070) ***/
/*
 * Contains application start address.
 */
#define IAXXX_SRB_BOOT_JUMP_ADDR_ADDR 0x58000070
#define IAXXX_SRB_BOOT_JUMP_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_JUMP_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_JUMP_ADDR_WMASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_JUMP_ADDR_RESET_VAL 0x00000000

/*
 * Host writes the application start address to this register.
 */
#define IAXXX_SRB_BOOT_JUMP_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_BOOT_JUMP_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_BOOT_JUMP_ADDR_REG_POS 0
#define IAXXX_SRB_BOOT_JUMP_ADDR_REG_SIZE 32
#define IAXXX_SRB_BOOT_JUMP_ADDR_REG_DECL (31 : 0)

/*** SRB_BOOT_OTP_ADDR (0x58000074) ***/
/*
 * Start address of OTP/EFUSE block saved by SBL during boot.
 */
#define IAXXX_SRB_BOOT_OTP_ADDR_ADDR 0x58000074
#define IAXXX_SRB_BOOT_OTP_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_OTP_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_OTP_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_OTP_ADDR_RESET_VAL 0x00000000

/*
 * Contains the start address of the buffer to
 * which OTP values were saved during SBL boot-up.
 */
#define IAXXX_SRB_BOOT_OTP_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_BOOT_OTP_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_BOOT_OTP_ADDR_REG_POS 0
#define IAXXX_SRB_BOOT_OTP_ADDR_REG_SIZE 32
#define IAXXX_SRB_BOOT_OTP_ADDR_REG_DECL (31 : 0)

/*** SRB_BOOT_OTP_LENGTH (0x58000078) ***/
/*
 * Length of OTP/EFUSE block.
 */
#define IAXXX_SRB_BOOT_OTP_LENGTH_ADDR 0x58000078
#define IAXXX_SRB_BOOT_OTP_LENGTH_MASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_OTP_LENGTH_RMASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_OTP_LENGTH_WMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_OTP_LENGTH_RESET_VAL 0x00000000

/*
 * Contains the length of the OTP buffer.
 */
#define IAXXX_SRB_BOOT_OTP_LENGTH_REG_MASK 0xffffffff
#define IAXXX_SRB_BOOT_OTP_LENGTH_REG_RESET_VAL 0x0
#define IAXXX_SRB_BOOT_OTP_LENGTH_REG_POS 0
#define IAXXX_SRB_BOOT_OTP_LENGTH_REG_SIZE 32
#define IAXXX_SRB_BOOT_OTP_LENGTH_REG_DECL (31 : 0)

/*** SRB_BOOT_INT_OSC_CALIB_DELAY (0x5800007c) ***/
/*
 * Contains calibration measurement time per iteration.
 */
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_ADDR 0x5800007c
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_MASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_RMASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_WMASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_RESET_VAL 0x00000000

/*
 * Contains the delay in (INT_OSC_CALIB_DELAY * 1000)
 * cycles per iteration for internal oscillator calibration.
 */
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_REG_MASK 0xffffffff
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_REG_RESET_VAL 0x0
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_REG_POS 0
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_REG_SIZE 32
#define IAXXX_SRB_BOOT_INT_OSC_CALIB_DELAY_REG_DECL (31 : 0)

/*** SRB_BOOT_INT_OSC_TRIM_VALUE (0x58000080) ***/
/*
 * Contains internal oscillator trim value.
 */
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_ADDR 0x58000080
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_MASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_WMASK_VAL 0xffffffff
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_RESET_VAL 0x00000000

/*
 * Contains the trim value computed after
 * internal oscillator calibration.
 */
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_REG_MASK 0xffffffff
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_REG_RESET_VAL 0x0
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_REG_POS 0
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_REG_SIZE 32
#define IAXXX_SRB_BOOT_INT_OSC_TRIM_VALUE_REG_DECL (31 : 0)

/*** SRB_BOOT_RESERVED_1 (0x58000084) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_BOOT_RESERVED_1_ADDR 0x58000084
#define IAXXX_SRB_BOOT_RESERVED_1_MASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_1_RMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_1_WMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_1_RESET_VAL 0x00000000

/*** SRB_BOOT_RESERVED_2 (0x58000088) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_BOOT_RESERVED_2_ADDR 0x58000088
#define IAXXX_SRB_BOOT_RESERVED_2_MASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_2_RMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_2_WMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_2_RESET_VAL 0x00000000

/*** SRB_BOOT_RESERVED_3 (0x5800008c) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_BOOT_RESERVED_3_ADDR 0x5800008c
#define IAXXX_SRB_BOOT_RESERVED_3_MASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_3_RMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_3_WMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_3_RESET_VAL 0x00000000

/*** SRB_BOOT_RESERVED_4 (0x58000090) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_BOOT_RESERVED_4_ADDR 0x58000090
#define IAXXX_SRB_BOOT_RESERVED_4_MASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_4_RMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_4_WMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_4_RESET_VAL 0x00000000

/*** SRB_BOOT_RESERVED_5 (0x58000094) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_BOOT_RESERVED_5_ADDR 0x58000094
#define IAXXX_SRB_BOOT_RESERVED_5_MASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_5_RMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_5_WMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_5_RESET_VAL 0x00000000

/*** SRB_BOOT_RESERVED_6 (0x58000098) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_BOOT_RESERVED_6_ADDR 0x58000098
#define IAXXX_SRB_BOOT_RESERVED_6_MASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_6_RMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_6_WMASK_VAL 0x00000000
#define IAXXX_SRB_BOOT_RESERVED_6_RESET_VAL 0x00000000

/*** SRB_CHKSUM (0x5800009c) ***/
/*
 * Request a checksum calculation.
 */
#define IAXXX_SRB_CHKSUM_ADDR 0x5800009c
#define IAXXX_SRB_CHKSUM_MASK_VAL 0x00000001
#define IAXXX_SRB_CHKSUM_RMASK_VAL 0x00000001
#define IAXXX_SRB_CHKSUM_WMASK_VAL 0x00000001
#define IAXXX_SRB_CHKSUM_RESET_VAL 0x00000000

/*
 * Host sets to request checksum calculation.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_CHKSUM_REQ_MASK 0x00000001
#define IAXXX_SRB_CHKSUM_REQ_RESET_VAL 0x0
#define IAXXX_SRB_CHKSUM_REQ_POS 0
#define IAXXX_SRB_CHKSUM_REQ_SIZE 1
#define IAXXX_SRB_CHKSUM_REQ_DECL 0

/*** SRB_CHKSUM_BUFFER_ADDR (0x580000a0) ***/
/*
 * Checksum buffer base address.
 */
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_ADDR 0x580000a0
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_WMASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_RESET_VAL 0x00000000

/*
 * Contains the address of the buffer for which the checksum is to be
 * calculated.
 */
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_REG_POS 0
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_REG_SIZE 32
#define IAXXX_SRB_CHKSUM_BUFFER_ADDR_REG_DECL (31 : 0)

/*** SRB_CHKSUM_LENGTH (0x580000a4) ***/
/*
 * Checksum buffer length.
 */
#define IAXXX_SRB_CHKSUM_LENGTH_ADDR 0x580000a4
#define IAXXX_SRB_CHKSUM_LENGTH_MASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_LENGTH_RMASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_LENGTH_WMASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_LENGTH_RESET_VAL 0x00000000

/*
 * The length, in bytes, of the buffer for which the checksum is to be
 * calculated.
 */
#define IAXXX_SRB_CHKSUM_LENGTH_REG_MASK 0xffffffff
#define IAXXX_SRB_CHKSUM_LENGTH_REG_RESET_VAL 0x0
#define IAXXX_SRB_CHKSUM_LENGTH_REG_POS 0
#define IAXXX_SRB_CHKSUM_LENGTH_REG_SIZE 32
#define IAXXX_SRB_CHKSUM_LENGTH_REG_DECL (31 : 0)

/*** SRB_CHKSUM_VAL1 (0x580000a8) ***/
/*
 * Checksum value 1.
 */
#define IAXXX_SRB_CHKSUM_VAL1_ADDR 0x580000a8
#define IAXXX_SRB_CHKSUM_VAL1_MASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_VAL1_RMASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_VAL1_WMASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_VAL1_RESET_VAL 0x00000000

/*
 * Upon checksum calculation, the value will appear here.
 * Write 0 to reset the value before starting a new calculation.
 * Otherwise, calculation will resume with current value.
 */
#define IAXXX_SRB_CHKSUM_VAL1_REG_MASK 0xffffffff
#define IAXXX_SRB_CHKSUM_VAL1_REG_RESET_VAL 0x0
#define IAXXX_SRB_CHKSUM_VAL1_REG_POS 0
#define IAXXX_SRB_CHKSUM_VAL1_REG_SIZE 32
#define IAXXX_SRB_CHKSUM_VAL1_REG_DECL (31 : 0)

/*** SRB_CHKSUM_VAL2 (0x580000ac) ***/
/*
 * Checksum value 2.
 */
#define IAXXX_SRB_CHKSUM_VAL2_ADDR 0x580000ac
#define IAXXX_SRB_CHKSUM_VAL2_MASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_VAL2_RMASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_VAL2_WMASK_VAL 0xffffffff
#define IAXXX_SRB_CHKSUM_VAL2_RESET_VAL 0x00000000

/*
 * Upon checksum calculation, the value will appear here.
 * Write 0 to reset the value before starting a new calculation.
 * Otherwise, calculation will resume with current value.
 */
#define IAXXX_SRB_CHKSUM_VAL2_REG_MASK 0xffffffff
#define IAXXX_SRB_CHKSUM_VAL2_REG_RESET_VAL 0x0
#define IAXXX_SRB_CHKSUM_VAL2_REG_POS 0
#define IAXXX_SRB_CHKSUM_VAL2_REG_SIZE 32
#define IAXXX_SRB_CHKSUM_VAL2_REG_DECL (31 : 0)

/*** SRB_CHKSUM_RESERVED_1 (0x580000b0) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_CHKSUM_RESERVED_1_ADDR 0x580000b0
#define IAXXX_SRB_CHKSUM_RESERVED_1_MASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_1_RMASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_1_WMASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_1_RESET_VAL 0x00000000

/*** SRB_CHKSUM_RESERVED_2 (0x580000b4) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_CHKSUM_RESERVED_2_ADDR 0x580000b4
#define IAXXX_SRB_CHKSUM_RESERVED_2_MASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_2_RMASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_2_WMASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_2_RESET_VAL 0x00000000

/*** SRB_CHKSUM_RESERVED_3 (0x580000b8) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_CHKSUM_RESERVED_3_ADDR 0x580000b8
#define IAXXX_SRB_CHKSUM_RESERVED_3_MASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_3_RMASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_3_WMASK_VAL 0x00000000
#define IAXXX_SRB_CHKSUM_RESERVED_3_RESET_VAL 0x00000000

/*** SRB_FLASHUPD_REQUEST (0x580000bc) ***/
/*
 * Request flash update
 */
#define IAXXX_SRB_FLASHUPD_REQUEST_ADDR 0x580000bc
#define IAXXX_SRB_FLASHUPD_REQUEST_MASK_VAL 0x0000001f
#define IAXXX_SRB_FLASHUPD_REQUEST_RMASK_VAL 0x0000001f
#define IAXXX_SRB_FLASHUPD_REQUEST_WMASK_VAL 0x0000001f
#define IAXXX_SRB_FLASHUPD_REQUEST_RESET_VAL 0x00000000

/*
 * Host sets this bit after setting flash image size in FLASH_IMG_SIZE
 * Requires block update to take effect.
 * Device clears when flash buffer is allocated and FLASHUPD_IMG_ADDR is set.
 */
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_BUF_REQ_MASK 0x00000001
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_BUF_REQ_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_BUF_REQ_POS 0
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_BUF_REQ_SIZE 1
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_BUF_REQ_DECL 0

/*
 * Host sets this bit to initiate full flash chip erase. All data on flash is
 * erased.
 */
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CHIP_ERASE_MASK 0x00000002
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CHIP_ERASE_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CHIP_ERASE_POS 1
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CHIP_ERASE_SIZE 1
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CHIP_ERASE_DECL 1

/*
 * Host sets this bit to initiate full flash chip program.
 */
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FACTORY_PROG_MASK 0x00000004
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FACTORY_PROG_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FACTORY_PROG_POS 2
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FACTORY_PROG_SIZE 1
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FACTORY_PROG_DECL 2

/*
 * Host sets this bit after transferring new flash image to update Boot
 * image.
 */
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FIELD_UPD_MASK 0x00000008
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FIELD_UPD_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FIELD_UPD_POS 3
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FIELD_UPD_SIZE 1
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_FIELD_UPD_DECL 3

/*
 * Host sets this bit to indicate flash program continue (next block)
 */
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CONT_NEXT_BLK_MASK 0x00000010
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CONT_NEXT_BLK_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CONT_NEXT_BLK_POS 4
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CONT_NEXT_BLK_SIZE 1
#define IAXXX_SRB_FLASHUPD_REQUEST_FLASH_CONT_NEXT_BLK_DECL 4

/*** SRB_FLASHUPD_STATUS (0x580000c0) ***/
/*
 * Flash update status
 */
#define IAXXX_SRB_FLASHUPD_STATUS_ADDR 0x580000c0
#define IAXXX_SRB_FLASHUPD_STATUS_MASK_VAL 0x000000ff
#define IAXXX_SRB_FLASHUPD_STATUS_RMASK_VAL 0x000000ff
#define IAXXX_SRB_FLASHUPD_STATUS_WMASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_STATUS_RESET_VAL 0x00000000

/*
 * Error code encountered during flash update process
 * 0x0 - No error.
 * 0x1 - Flash update buffer allocation failure
 * 0x2 - Flash program error
 * 0x3 - Flash checksum calculation error
 */
#define IAXXX_SRB_FLASHUPD_STATUS_ERR_CODE_MASK 0x000000ff
#define IAXXX_SRB_FLASHUPD_STATUS_ERR_CODE_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_STATUS_ERR_CODE_POS 0
#define IAXXX_SRB_FLASHUPD_STATUS_ERR_CODE_SIZE 8
#define IAXXX_SRB_FLASHUPD_STATUS_ERR_CODE_DECL (7 : 0)

/*** SRB_FLASHUPD_IMG_SIZE (0x580000c4) ***/
/*
 * Size of the new flash image, in bytes.
 */
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_ADDR 0x580000c4
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_WMASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_RESET_VAL 0x00000000

/*
 * Size of the new flash image, in bytes.
 * Must be a multiple of 4 bytes.
 */
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_REG_POS 0
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_REG_SIZE 32
#define IAXXX_SRB_FLASHUPD_IMG_SIZE_REG_DECL (31 : 0)

/*** SRB_FLASHUPD_IMG_ADDR (0x580000c8) ***/
/*
 * Address of the allocated memory where host can transfer new flash image.
 */
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_ADDR 0x580000c8
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_WMASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_RESET_VAL 0x00000000

/*
 * On memory allocation - Set by device
 * upon completion, with address of allocated memory.
 * where host can start transferring new flash image.
 */
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_REG_POS 0
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_REG_SIZE 32
#define IAXXX_SRB_FLASHUPD_IMG_ADDR_REG_DECL (31 : 0)

/*** SRB_FLASHUPD_BLK_SIZE (0x580000cc) ***/
/*
 * Size of flash update block, in bytes. Used to perform flash update in
 * blocks to save memory.
 */
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_ADDR 0x580000cc
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_WMASK_VAL 0xffffffff
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_RESET_VAL 0x00000000

/*
 * Size of flash update block in bytes.
 */
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_REG_POS 0
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_REG_SIZE 32
#define IAXXX_SRB_FLASHUPD_BLK_SIZE_REG_DECL (31 : 0)

/*** SRB_FLASHUPD_RESERVED_1 (0x580000d0) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_FLASHUPD_RESERVED_1_ADDR 0x580000d0
#define IAXXX_SRB_FLASHUPD_RESERVED_1_MASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_1_RMASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_1_WMASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_1_RESET_VAL 0x00000000

/*** SRB_FLASHUPD_RESERVED_2 (0x580000d4) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_FLASHUPD_RESERVED_2_ADDR 0x580000d4
#define IAXXX_SRB_FLASHUPD_RESERVED_2_MASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_2_RMASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_2_WMASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_2_RESET_VAL 0x00000000

/*** SRB_FLASHUPD_RESERVED_3 (0x580000d8) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_FLASHUPD_RESERVED_3_ADDR 0x580000d8
#define IAXXX_SRB_FLASHUPD_RESERVED_3_MASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_3_RMASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_3_WMASK_VAL 0x00000000
#define IAXXX_SRB_FLASHUPD_RESERVED_3_RESET_VAL 0x00000000

/*** SRB_SCRIPT (0x580000dc) ***/
/*
 * Request to register, de-register, and execute scripts.
 */
#define IAXXX_SRB_SCRIPT_ADDR 0x580000dc
#define IAXXX_SRB_SCRIPT_MASK_VAL 0x0000000f
#define IAXXX_SRB_SCRIPT_RMASK_VAL 0x0000000f
#define IAXXX_SRB_SCRIPT_WMASK_VAL 0x0000000f
#define IAXXX_SRB_SCRIPT_RESET_VAL 0x00000000

/*
 * Host sets to request script registration.
 * Requires block update to take effect. Device clears when operation is
 * complete.
 */
#define IAXXX_SRB_SCRIPT_REG_REQ_MASK 0x00000001
#define IAXXX_SRB_SCRIPT_REG_REQ_RESET_VAL 0x0
#define IAXXX_SRB_SCRIPT_REG_REQ_POS 0
#define IAXXX_SRB_SCRIPT_REG_REQ_SIZE 1
#define IAXXX_SRB_SCRIPT_REG_REQ_DECL 0

/*
 * Host sets to request script execution.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_SCRIPT_EXEC_REQ_MASK 0x00000002
#define IAXXX_SRB_SCRIPT_EXEC_REQ_RESET_VAL 0x0
#define IAXXX_SRB_SCRIPT_EXEC_REQ_POS 1
#define IAXXX_SRB_SCRIPT_EXEC_REQ_SIZE 1
#define IAXXX_SRB_SCRIPT_EXEC_REQ_DECL 1

/*
 * Host sets to request script deregistration.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_SCRIPT_DEREG_REQ_MASK 0x00000004
#define IAXXX_SRB_SCRIPT_DEREG_REQ_RESET_VAL 0x0
#define IAXXX_SRB_SCRIPT_DEREG_REQ_POS 2
#define IAXXX_SRB_SCRIPT_DEREG_REQ_SIZE 1
#define IAXXX_SRB_SCRIPT_DEREG_REQ_DECL 2

/*
 * Host sets to request script recall.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_SCRIPT_RECALL_REQ_MASK 0x00000008
#define IAXXX_SRB_SCRIPT_RECALL_REQ_RESET_VAL 0x0
#define IAXXX_SRB_SCRIPT_RECALL_REQ_POS 3
#define IAXXX_SRB_SCRIPT_RECALL_REQ_SIZE 1
#define IAXXX_SRB_SCRIPT_RECALL_REQ_DECL 3

/*** SRB_SCRIPT_COUNT (0x580000e0) ***/
/*
 * Number of scripts registered in the database.
 */
#define IAXXX_SRB_SCRIPT_COUNT_ADDR 0x580000e0
#define IAXXX_SRB_SCRIPT_COUNT_MASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_COUNT_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_COUNT_WMASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_COUNT_RESET_VAL 0x00000000

/*
 * Number of scripts registered in the database.
 */
#define IAXXX_SRB_SCRIPT_COUNT_REG_MASK 0xffffffff
#define IAXXX_SRB_SCRIPT_COUNT_REG_RESET_VAL 0x0
#define IAXXX_SRB_SCRIPT_COUNT_REG_POS 0
#define IAXXX_SRB_SCRIPT_COUNT_REG_SIZE 32
#define IAXXX_SRB_SCRIPT_COUNT_REG_DECL (31 : 0)

/*** SRB_SCRIPT_ID (0x580000e4) ***/
/*
 * Host-assigned script ID.
 */
#define IAXXX_SRB_SCRIPT_ID_ADDR 0x580000e4
#define IAXXX_SRB_SCRIPT_ID_MASK_VAL 0x0000ffff
#define IAXXX_SRB_SCRIPT_ID_RMASK_VAL 0x0000ffff
#define IAXXX_SRB_SCRIPT_ID_WMASK_VAL 0x0000ffff
#define IAXXX_SRB_SCRIPT_ID_RESET_VAL 0x00000000

/*
 * Host assigned script ID.
 */
#define IAXXX_SRB_SCRIPT_ID_REG_MASK 0x0000ffff
#define IAXXX_SRB_SCRIPT_ID_REG_RESET_VAL 0x0
#define IAXXX_SRB_SCRIPT_ID_REG_POS 0
#define IAXXX_SRB_SCRIPT_ID_REG_SIZE 16
#define IAXXX_SRB_SCRIPT_ID_REG_DECL (15 : 0)

/*** SRB_SCRIPT_ADDRESS (0x580000e8) ***/
/*
 * The starting address of the script.
 */
#define IAXXX_SRB_SCRIPT_ADDRESS_ADDR 0x580000e8
#define IAXXX_SRB_SCRIPT_ADDRESS_MASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_ADDRESS_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_ADDRESS_WMASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_ADDRESS_RESET_VAL 0x00000000

/*
 * Script address. Used in script subscription.
 */
#define IAXXX_SRB_SCRIPT_ADDRESS_REG_MASK 0xffffffff
#define IAXXX_SRB_SCRIPT_ADDRESS_REG_RESET_VAL 0x0
#define IAXXX_SRB_SCRIPT_ADDRESS_REG_POS 0
#define IAXXX_SRB_SCRIPT_ADDRESS_REG_SIZE 32
#define IAXXX_SRB_SCRIPT_ADDRESS_REG_DECL (31 : 0)

/*** SRB_SCRIPT_LENGTH (0x580000ec) ***/
/*
 * The length of the script.
 */
#define IAXXX_SRB_SCRIPT_LENGTH_ADDR 0x580000ec
#define IAXXX_SRB_SCRIPT_LENGTH_MASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_LENGTH_RMASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_LENGTH_WMASK_VAL 0xffffffff
#define IAXXX_SRB_SCRIPT_LENGTH_RESET_VAL 0x00000000

/*
 * Script length in bytes.
 */
#define IAXXX_SRB_SCRIPT_LENGTH_REG_MASK 0xffffffff
#define IAXXX_SRB_SCRIPT_LENGTH_REG_RESET_VAL 0x0
#define IAXXX_SRB_SCRIPT_LENGTH_REG_POS 0
#define IAXXX_SRB_SCRIPT_LENGTH_REG_SIZE 32
#define IAXXX_SRB_SCRIPT_LENGTH_REG_DECL (31 : 0)

/*** SRB_SCRIPT_RESERVED_1 (0x580000f0) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SCRIPT_RESERVED_1_ADDR 0x580000f0
#define IAXXX_SRB_SCRIPT_RESERVED_1_MASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_1_RMASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_1_WMASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_1_RESET_VAL 0x00000000

/*** SRB_SCRIPT_RESERVED_2 (0x580000f4) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SCRIPT_RESERVED_2_ADDR 0x580000f4
#define IAXXX_SRB_SCRIPT_RESERVED_2_MASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_2_RMASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_2_WMASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_2_RESET_VAL 0x00000000

/*** SRB_SCRIPT_RESERVED_3 (0x580000f8) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_SCRIPT_RESERVED_3_ADDR 0x580000f8
#define IAXXX_SRB_SCRIPT_RESERVED_3_MASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_3_RMASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_3_WMASK_VAL 0x00000000
#define IAXXX_SRB_SCRIPT_RESERVED_3_RESET_VAL 0x00000000

/*** SRB_EVT_NEXT_REQ (0x580000fc) ***/
/*
 * Request retrieval of event notification.
 */
#define IAXXX_SRB_EVT_NEXT_REQ_ADDR 0x580000fc
#define IAXXX_SRB_EVT_NEXT_REQ_MASK_VAL 0x00000001
#define IAXXX_SRB_EVT_NEXT_REQ_RMASK_VAL 0x00000001
#define IAXXX_SRB_EVT_NEXT_REQ_WMASK_VAL 0x00000001
#define IAXXX_SRB_EVT_NEXT_REQ_RESET_VAL 0x00000000

/*
 * Host sets to request to get the next event notification.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_EVT_NEXT_REQ_NOT_MASK 0x00000001
#define IAXXX_SRB_EVT_NEXT_REQ_NOT_RESET_VAL 0x0
#define IAXXX_SRB_EVT_NEXT_REQ_NOT_POS 0
#define IAXXX_SRB_EVT_NEXT_REQ_NOT_SIZE 1
#define IAXXX_SRB_EVT_NEXT_REQ_NOT_DECL 0

/*** SRB_EVT_COUNT (0x58000100) ***/
/*
 * Event count register
 */
#define IAXXX_SRB_EVT_COUNT_ADDR 0x58000100
#define IAXXX_SRB_EVT_COUNT_MASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_COUNT_RMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_COUNT_WMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_COUNT_RESET_VAL 0x00000000

/*
 * Number of pending event notifications.
 */
#define IAXXX_SRB_EVT_COUNT_REG_MASK 0xffffffff
#define IAXXX_SRB_EVT_COUNT_REG_RESET_VAL 0x0
#define IAXXX_SRB_EVT_COUNT_REG_POS 0
#define IAXXX_SRB_EVT_COUNT_REG_SIZE 32
#define IAXXX_SRB_EVT_COUNT_REG_DECL (31 : 0)

/*** SRB_EVT_SRC_INFO (0x58000104) ***/
/*
 * Source of event notification.
 */
#define IAXXX_SRB_EVT_SRC_INFO_ADDR 0x58000104
#define IAXXX_SRB_EVT_SRC_INFO_MASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SRC_INFO_RMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SRC_INFO_WMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SRC_INFO_RESET_VAL 0x00000000

/*
 * System ID of event source.
 */
#define IAXXX_SRB_EVT_SRC_INFO_SYS_ID_MASK 0x0000ffff
#define IAXXX_SRB_EVT_SRC_INFO_SYS_ID_RESET_VAL 0x0
#define IAXXX_SRB_EVT_SRC_INFO_SYS_ID_POS 0
#define IAXXX_SRB_EVT_SRC_INFO_SYS_ID_SIZE 16
#define IAXXX_SRB_EVT_SRC_INFO_SYS_ID_DECL (15 : 0)

/*
 * Event ID
 */
#define IAXXX_SRB_EVT_SRC_INFO_EVT_ID_MASK 0xffff0000
#define IAXXX_SRB_EVT_SRC_INFO_EVT_ID_RESET_VAL 0x0
#define IAXXX_SRB_EVT_SRC_INFO_EVT_ID_POS 16
#define IAXXX_SRB_EVT_SRC_INFO_EVT_ID_SIZE 16
#define IAXXX_SRB_EVT_SRC_INFO_EVT_ID_DECL (31 : 16)

/*** SRB_EVT_SRC_OPAQUE (0x58000108) ***/
#define IAXXX_SRB_EVT_SRC_OPAQUE_ADDR 0x58000108
#define IAXXX_SRB_EVT_SRC_OPAQUE_MASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SRC_OPAQUE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SRC_OPAQUE_WMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SRC_OPAQUE_RESET_VAL 0x00000000

/*
 * Opaque data that was sent by the event's source.
 */
#define IAXXX_SRB_EVT_SRC_OPAQUE_REG_MASK 0xffffffff
#define IAXXX_SRB_EVT_SRC_OPAQUE_REG_RESET_VAL 0x0
#define IAXXX_SRB_EVT_SRC_OPAQUE_REG_POS 0
#define IAXXX_SRB_EVT_SRC_OPAQUE_REG_SIZE 32
#define IAXXX_SRB_EVT_SRC_OPAQUE_REG_DECL (31 : 0)

/*** SRB_EVT_DST_OPAQUE (0x5800010c) ***/
/*
 * Opaque data that was sent to the event's destination.
 */
#define IAXXX_SRB_EVT_DST_OPAQUE_ADDR 0x5800010c
#define IAXXX_SRB_EVT_DST_OPAQUE_MASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_DST_OPAQUE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_DST_OPAQUE_WMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_DST_OPAQUE_RESET_VAL 0x00000000

/*
 * Opaque data that was sent to the event's destination.
 */
#define IAXXX_SRB_EVT_DST_OPAQUE_REG_MASK 0xffffffff
#define IAXXX_SRB_EVT_DST_OPAQUE_REG_RESET_VAL 0x0
#define IAXXX_SRB_EVT_DST_OPAQUE_REG_POS 0
#define IAXXX_SRB_EVT_DST_OPAQUE_REG_SIZE 32
#define IAXXX_SRB_EVT_DST_OPAQUE_REG_DECL (31 : 0)

/*** SRB_EVT_RESERVED_1 (0x58000110) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_EVT_RESERVED_1_ADDR 0x58000110
#define IAXXX_SRB_EVT_RESERVED_1_MASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_1_RMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_1_WMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_1_RESET_VAL 0x00000000

/*** SRB_EVT_RESERVED_2 (0x58000114) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_EVT_RESERVED_2_ADDR 0x58000114
#define IAXXX_SRB_EVT_RESERVED_2_MASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_2_RMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_2_WMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_2_RESET_VAL 0x00000000

/*** SRB_EVT_RESERVED_3 (0x58000118) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_EVT_RESERVED_3_ADDR 0x58000118
#define IAXXX_SRB_EVT_RESERVED_3_MASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_3_RMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_3_WMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_RESERVED_3_RESET_VAL 0x00000000

/*** SRB_EVT (0x5800011c) ***/
/*
 * Request subscription/unsubscription of events.
 */
#define IAXXX_SRB_EVT_ADDR 0x5800011c
#define IAXXX_SRB_EVT_MASK_VAL 0x0000001f
#define IAXXX_SRB_EVT_RMASK_VAL 0x0000001f
#define IAXXX_SRB_EVT_WMASK_VAL 0x0000001f
#define IAXXX_SRB_EVT_RESET_VAL 0x00000000

/*
 * Host sets to request event subscription.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_EVT_SUB_REQ_MASK 0x00000001
#define IAXXX_SRB_EVT_SUB_REQ_RESET_VAL 0x0
#define IAXXX_SRB_EVT_SUB_REQ_POS 0
#define IAXXX_SRB_EVT_SUB_REQ_SIZE 1
#define IAXXX_SRB_EVT_SUB_REQ_DECL 0

/*
 * Host sets to request event trigger.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_EVT_TRIG_REQ_MASK 0x00000002
#define IAXXX_SRB_EVT_TRIG_REQ_RESET_VAL 0x0
#define IAXXX_SRB_EVT_TRIG_REQ_POS 1
#define IAXXX_SRB_EVT_TRIG_REQ_SIZE 1
#define IAXXX_SRB_EVT_TRIG_REQ_DECL 1

/*
 * Host sets to request event unsubscription.
 * Requires block update to take effect.
 * Device clears when operation is complete.
 */
#define IAXXX_SRB_EVT_UNSUB_REQ_MASK 0x00000004
#define IAXXX_SRB_EVT_UNSUB_REQ_RESET_VAL 0x0
#define IAXXX_SRB_EVT_UNSUB_REQ_POS 2
#define IAXXX_SRB_EVT_UNSUB_REQ_SIZE 1
#define IAXXX_SRB_EVT_UNSUB_REQ_DECL 2

/*
 * Host sets to request retrieval of event subscription
 * Requires block update to take effect.
 * Device clears when complete.
 */
#define IAXXX_SRB_EVT_SUB_READ_REQ_MASK 0x00000008
#define IAXXX_SRB_EVT_SUB_READ_REQ_RESET_VAL 0x0
#define IAXXX_SRB_EVT_SUB_READ_REQ_POS 3
#define IAXXX_SRB_EVT_SUB_READ_REQ_SIZE 1
#define IAXXX_SRB_EVT_SUB_READ_REQ_DECL 3

/*
 * Host sets to request to reset index for retrieving
 * subscription entries
 */
#define IAXXX_SRB_EVT_RESET_RD_IDX_MASK 0x00000010
#define IAXXX_SRB_EVT_RESET_RD_IDX_RESET_VAL 0x0
#define IAXXX_SRB_EVT_RESET_RD_IDX_POS 4
#define IAXXX_SRB_EVT_RESET_RD_IDX_SIZE 1
#define IAXXX_SRB_EVT_RESET_RD_IDX_DECL 4

/*** SRB_EVT_ID (0x58000120) ***/
#define IAXXX_SRB_EVT_ID_ADDR 0x58000120
#define IAXXX_SRB_EVT_ID_MASK_VAL 0x0000ffff
#define IAXXX_SRB_EVT_ID_RMASK_VAL 0x0000ffff
#define IAXXX_SRB_EVT_ID_WMASK_VAL 0x0000ffff
#define IAXXX_SRB_EVT_ID_RESET_VAL 0x00000000

/*
 * Event ID. Used in subscription and triggering of events.
 */
#define IAXXX_SRB_EVT_ID_REG_MASK 0x0000ffff
#define IAXXX_SRB_EVT_ID_REG_RESET_VAL 0x0
#define IAXXX_SRB_EVT_ID_REG_POS 0
#define IAXXX_SRB_EVT_ID_REG_SIZE 16
#define IAXXX_SRB_EVT_ID_REG_DECL (15 : 0)

/*** SRB_EVT_SUB (0x58000124) ***/
/*
 * The System IDs of the event source and destination.
 */
#define IAXXX_SRB_EVT_SUB_ADDR 0x58000124
#define IAXXX_SRB_EVT_SUB_MASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SUB_RMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SUB_WMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SUB_RESET_VAL 0x00000000

/*
 * System ID of event source.
 * Used in subscription/unsubscription
 * and event triggering.
 */
#define IAXXX_SRB_EVT_SUB_SRC_ID_MASK 0x0000ffff
#define IAXXX_SRB_EVT_SUB_SRC_ID_RESET_VAL 0x0
#define IAXXX_SRB_EVT_SUB_SRC_ID_POS 0
#define IAXXX_SRB_EVT_SUB_SRC_ID_SIZE 16
#define IAXXX_SRB_EVT_SUB_SRC_ID_DECL (15 : 0)

/*
 * System ID of event destination.
 * Used in subscription/unsubscription.
 */
#define IAXXX_SRB_EVT_SUB_DST_ID_MASK 0xffff0000
#define IAXXX_SRB_EVT_SUB_DST_ID_RESET_VAL 0x0
#define IAXXX_SRB_EVT_SUB_DST_ID_POS 16
#define IAXXX_SRB_EVT_SUB_DST_ID_SIZE 16
#define IAXXX_SRB_EVT_SUB_DST_ID_DECL (31 : 16)

/*** SRB_EVT_SUB_DST_OPAQUE (0x58000128) ***/
/*
 * Opaque data of event notification.
 */
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_ADDR 0x58000128
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_MASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_WMASK_VAL 0xffffffff
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_RESET_VAL 0x00000000

/*
 * Opaque data that will be sent to
 * event destination with the event data.
 */
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_REG_MASK 0xffffffff
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_REG_RESET_VAL 0x0
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_REG_POS 0
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_REG_SIZE 32
#define IAXXX_SRB_EVT_SUB_DST_OPAQUE_REG_DECL (31 : 0)

/*** SRB_EVT_SUB_RESERVED_1 (0x5800012c) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_EVT_SUB_RESERVED_1_ADDR 0x5800012c
#define IAXXX_SRB_EVT_SUB_RESERVED_1_MASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_1_RMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_1_WMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_1_RESET_VAL 0x00000000

/*** SRB_EVT_SUB_RESERVED_2 (0x58000130) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_EVT_SUB_RESERVED_2_ADDR 0x58000130
#define IAXXX_SRB_EVT_SUB_RESERVED_2_MASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_2_RMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_2_WMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_2_RESET_VAL 0x00000000

/*** SRB_EVT_SUB_RESERVED_3 (0x58000134) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_EVT_SUB_RESERVED_3_ADDR 0x58000134
#define IAXXX_SRB_EVT_SUB_RESERVED_3_MASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_3_RMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_3_WMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_3_RESET_VAL 0x00000000

/*** SRB_EVT_SUB_RESERVED_4 (0x58000138) ***/
/*
 * Reserved register space for future use
 */
#define IAXXX_SRB_EVT_SUB_RESERVED_4_ADDR 0x58000138
#define IAXXX_SRB_EVT_SUB_RESERVED_4_MASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_4_RMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_4_WMASK_VAL 0x00000000
#define IAXXX_SRB_EVT_SUB_RESERVED_4_RESET_VAL 0x00000000

/*** SRB_HOST_DEFINED_1 (0x5800013c) ***/
/*
 * Scratch registers used by host only.
 */
#define IAXXX_SRB_HOST_DEFINED_1_ADDR 0x5800013c
#define IAXXX_SRB_HOST_DEFINED_1_MASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_1_RMASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_1_WMASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_1_RESET_VAL 0x00000000

/*** SRB_HOST_DEFINED_2 (0x58000140) ***/
/*
 * Scratch registers used by host only.
 */
#define IAXXX_SRB_HOST_DEFINED_2_ADDR 0x58000140
#define IAXXX_SRB_HOST_DEFINED_2_MASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_2_RMASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_2_WMASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_2_RESET_VAL 0x00000000

/*** SRB_HOST_DEFINED_3 (0x58000144) ***/
/*
 * Scratch registers used by host only.
 */
#define IAXXX_SRB_HOST_DEFINED_3_ADDR 0x58000144
#define IAXXX_SRB_HOST_DEFINED_3_MASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_3_RMASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_3_WMASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_3_RESET_VAL 0x00000000

/*** SRB_HOST_DEFINED_4 (0x58000148) ***/
/*
 * Scratch registers used by host only.
 */
#define IAXXX_SRB_HOST_DEFINED_4_ADDR 0x58000148
#define IAXXX_SRB_HOST_DEFINED_4_MASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_4_RMASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_4_WMASK_VAL 0x00000000
#define IAXXX_SRB_HOST_DEFINED_4_RESET_VAL 0x00000000

/*** SRB_PWR_STATE (0x5800014c) ***/
/*
 * Put Chip to Sleep/Active state
 */
#define IAXXX_SRB_PWR_STATE_ADDR 0x5800014c
#define IAXXX_SRB_PWR_STATE_MASK_VAL 0x00000001
#define IAXXX_SRB_PWR_STATE_RMASK_VAL 0x00000001
#define IAXXX_SRB_PWR_STATE_WMASK_VAL 0x00000001
#define IAXXX_SRB_PWR_STATE_RESET_VAL 0x00000000

/*
 * Host writes to this register in order to
 * put Chip to Sleep or Active state.
 * 0 for Sleep and 1 for Active.
 */
#define IAXXX_SRB_PWR_STATE_REG_MASK 0x00000001
#define IAXXX_SRB_PWR_STATE_REG_RESET_VAL 0x0
#define IAXXX_SRB_PWR_STATE_REG_POS 0
#define IAXXX_SRB_PWR_STATE_REG_SIZE 1
#define IAXXX_SRB_PWR_STATE_REG_DECL 0

/*** SRB_PCM_PORT_PWR_EN (0x58000150) ***/
/*
 * Turn ON/OFF clocks for pcm ports
 */
#define IAXXX_SRB_PCM_PORT_PWR_EN_ADDR 0x58000150
#define IAXXX_SRB_PCM_PORT_PWR_EN_MASK_VAL 0x0000003f
#define IAXXX_SRB_PCM_PORT_PWR_EN_RMASK_VAL 0x0000003f
#define IAXXX_SRB_PCM_PORT_PWR_EN_WMASK_VAL 0x0000003f
#define IAXXX_SRB_PCM_PORT_PWR_EN_RESET_VAL 0x00000000

/*
 * Enable/Disable PCM ports 0-5
 * 0 - Disable
 * 1 - Enable
 */
#define IAXXX_SRB_PCM_PORT_PWR_EN_REG_MASK 0x0000003f
#define IAXXX_SRB_PCM_PORT_PWR_EN_REG_RESET_VAL 0x0
#define IAXXX_SRB_PCM_PORT_PWR_EN_REG_POS 0
#define IAXXX_SRB_PCM_PORT_PWR_EN_REG_SIZE 6
#define IAXXX_SRB_PCM_PORT_PWR_EN_REG_DECL (5 : 0)

/*** SRB_SBUS_PORT_PWR_EN (0x58000154) ***/
/*
 * Turn ON/OFF clocks for slimbus ports
 */
#define IAXXX_SRB_SBUS_PORT_PWR_EN_ADDR 0x58000154
#define IAXXX_SRB_SBUS_PORT_PWR_EN_MASK_VAL 0x00000001
#define IAXXX_SRB_SBUS_PORT_PWR_EN_RMASK_VAL 0x00000001
#define IAXXX_SRB_SBUS_PORT_PWR_EN_WMASK_VAL 0x00000001
#define IAXXX_SRB_SBUS_PORT_PWR_EN_RESET_VAL 0x00000000

/*
 * Enable/Disable SLIMBUS port
 * 0 - Disable
 * 1 - Enable
 */
#define IAXXX_SRB_SBUS_PORT_PWR_EN_REG_MASK 0x00000001
#define IAXXX_SRB_SBUS_PORT_PWR_EN_REG_RESET_VAL 0x0
#define IAXXX_SRB_SBUS_PORT_PWR_EN_REG_POS 0
#define IAXXX_SRB_SBUS_PORT_PWR_EN_REG_SIZE 1
#define IAXXX_SRB_SBUS_PORT_PWR_EN_REG_DECL 0

/*** SRB_PDMI_PORT_PWR_EN (0x58000158) ***/
/*
 * Turn ON/OFF clocks for pdmi ports
 */
#define IAXXX_SRB_PDMI_PORT_PWR_EN_ADDR 0x58000158
#define IAXXX_SRB_PDMI_PORT_PWR_EN_MASK_VAL 0x000000ff
#define IAXXX_SRB_PDMI_PORT_PWR_EN_RMASK_VAL 0x000000ff
#define IAXXX_SRB_PDMI_PORT_PWR_EN_WMASK_VAL 0x000000ff
#define IAXXX_SRB_PDMI_PORT_PWR_EN_RESET_VAL 0x00000000

/*
 * Enable/Disable PDM input ports 0-7
 * 0 - Disable
 * 1 - Enable
 */
#define IAXXX_SRB_PDMI_PORT_PWR_EN_REG_MASK 0x000000ff
#define IAXXX_SRB_PDMI_PORT_PWR_EN_REG_RESET_VAL 0x0
#define IAXXX_SRB_PDMI_PORT_PWR_EN_REG_POS 0
#define IAXXX_SRB_PDMI_PORT_PWR_EN_REG_SIZE 8
#define IAXXX_SRB_PDMI_PORT_PWR_EN_REG_DECL (7 : 0)

/*** SRB_PDMO_PORT_PWR_EN (0x5800015c) ***/
/*
 * Turn ON/OFF clocks for pdmo ports
 */
#define IAXXX_SRB_PDMO_PORT_PWR_EN_ADDR 0x5800015c
#define IAXXX_SRB_PDMO_PORT_PWR_EN_MASK_VAL 0x00000003
#define IAXXX_SRB_PDMO_PORT_PWR_EN_RMASK_VAL 0x00000003
#define IAXXX_SRB_PDMO_PORT_PWR_EN_WMASK_VAL 0x00000003
#define IAXXX_SRB_PDMO_PORT_PWR_EN_RESET_VAL 0x00000000

/*
 * Enable/Disable PDM output ports 0-1
 * 0 - Disable
 * 1 - Enable
 */
#define IAXXX_SRB_PDMO_PORT_PWR_EN_REG_MASK 0x00000003
#define IAXXX_SRB_PDMO_PORT_PWR_EN_REG_RESET_VAL 0x0
#define IAXXX_SRB_PDMO_PORT_PWR_EN_REG_POS 0
#define IAXXX_SRB_PDMO_PORT_PWR_EN_REG_SIZE 2
#define IAXXX_SRB_PDMO_PORT_PWR_EN_REG_DECL (1 : 0)

/*** SRB_ADC_PORT_PWR_EN (0x58000160) ***/
/*
 * Turn ON/OFF clocks for adc ports
 */
#define IAXXX_SRB_ADC_PORT_PWR_EN_ADDR 0x58000160
#define IAXXX_SRB_ADC_PORT_PWR_EN_MASK_VAL 0x0000000f
#define IAXXX_SRB_ADC_PORT_PWR_EN_RMASK_VAL 0x0000000f
#define IAXXX_SRB_ADC_PORT_PWR_EN_WMASK_VAL 0x0000000f
#define IAXXX_SRB_ADC_PORT_PWR_EN_RESET_VAL 0x00000000

/*
 * Enable/Disable ADC ports 0-3
 * 0 - Disable
 * 1 - Enable
 */
#define IAXXX_SRB_ADC_PORT_PWR_EN_REG_MASK 0x0000000f
#define IAXXX_SRB_ADC_PORT_PWR_EN_REG_RESET_VAL 0x0
#define IAXXX_SRB_ADC_PORT_PWR_EN_REG_POS 0
#define IAXXX_SRB_ADC_PORT_PWR_EN_REG_SIZE 4
#define IAXXX_SRB_ADC_PORT_PWR_EN_REG_DECL (3 : 0)

/*** SRB_DAC_PORT_PWR_EN (0x58000164) ***/
/*
 * Turn ON/OFF clocks for dac ports
 */
#define IAXXX_SRB_DAC_PORT_PWR_EN_ADDR 0x58000164
#define IAXXX_SRB_DAC_PORT_PWR_EN_MASK_VAL 0x00000003
#define IAXXX_SRB_DAC_PORT_PWR_EN_RMASK_VAL 0x00000003
#define IAXXX_SRB_DAC_PORT_PWR_EN_WMASK_VAL 0x00000003
#define IAXXX_SRB_DAC_PORT_PWR_EN_RESET_VAL 0x00000000

/*
 * Enable/Disable DAC ports 0-1
 * 0 - Disable
 * 1 - Enable
 */
#define IAXXX_SRB_DAC_PORT_PWR_EN_REG_MASK 0x00000003
#define IAXXX_SRB_DAC_PORT_PWR_EN_REG_RESET_VAL 0x0
#define IAXXX_SRB_DAC_PORT_PWR_EN_REG_POS 0
#define IAXXX_SRB_DAC_PORT_PWR_EN_REG_SIZE 2
#define IAXXX_SRB_DAC_PORT_PWR_EN_REG_DECL (1 : 0)

/*** SRB_I2S_PORT_PWR_EN (0x58000168) ***/
/*
 * Turn ON/OFF clocks for I2S master clock ports
 */
#define IAXXX_SRB_I2S_PORT_PWR_EN_ADDR 0x58000168
#define IAXXX_SRB_I2S_PORT_PWR_EN_MASK_VAL 0x0000007f
#define IAXXX_SRB_I2S_PORT_PWR_EN_RMASK_VAL 0x0000007f
#define IAXXX_SRB_I2S_PORT_PWR_EN_WMASK_VAL 0x0000007f
#define IAXXX_SRB_I2S_PORT_PWR_EN_RESET_VAL 0x00000000

/*
 * Enable/Disable I2S master clock ports 0-6
 * 0 - Disable
 * 1 - Enable
 */
#define IAXXX_SRB_I2S_PORT_PWR_EN_REG_MASK 0x0000007f
#define IAXXX_SRB_I2S_PORT_PWR_EN_REG_RESET_VAL 0x0
#define IAXXX_SRB_I2S_PORT_PWR_EN_REG_POS 0
#define IAXXX_SRB_I2S_PORT_PWR_EN_REG_SIZE 7
#define IAXXX_SRB_I2S_PORT_PWR_EN_REG_DECL (6 : 0)

/*** SRB_ARB_0_BASE_ADDR (0x5800016c) ***/
/*
 * Base Address of ARB 0.
 */
#define IAXXX_SRB_ARB_0_BASE_ADDR_ADDR 0x5800016c
#define IAXXX_SRB_ARB_0_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_0_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_0_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_0_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_0_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_0_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_0_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_0_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_0_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_0_SIZE (0x58000170) ***/
/*
 * Size of ARB 0.
 */
#define IAXXX_SRB_ARB_0_SIZE_ADDR 0x58000170
#define IAXXX_SRB_ARB_0_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_0_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_0_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_0_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_0_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_0_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_0_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_0_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_0_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_1_BASE_ADDR (0x58000174) ***/
/*
 * Base Address of ARB 1.
 */
#define IAXXX_SRB_ARB_1_BASE_ADDR_ADDR 0x58000174
#define IAXXX_SRB_ARB_1_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_1_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_1_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_1_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_1_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_1_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_1_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_1_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_1_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_1_SIZE (0x58000178) ***/
/*
 * Size of ARB 1.
 */
#define IAXXX_SRB_ARB_1_SIZE_ADDR 0x58000178
#define IAXXX_SRB_ARB_1_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_1_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_1_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_1_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_1_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_1_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_1_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_1_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_1_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_2_BASE_ADDR (0x5800017c) ***/
/*
 * Base Address of ARB 2.
 */
#define IAXXX_SRB_ARB_2_BASE_ADDR_ADDR 0x5800017c
#define IAXXX_SRB_ARB_2_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_2_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_2_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_2_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_2_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_2_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_2_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_2_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_2_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_2_SIZE (0x58000180) ***/
/*
 * Size of ARB 2.
 */
#define IAXXX_SRB_ARB_2_SIZE_ADDR 0x58000180
#define IAXXX_SRB_ARB_2_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_2_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_2_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_2_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_2_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_2_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_2_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_2_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_2_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_3_BASE_ADDR (0x58000184) ***/
/*
 * Base Address of ARB 3.
 */
#define IAXXX_SRB_ARB_3_BASE_ADDR_ADDR 0x58000184
#define IAXXX_SRB_ARB_3_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_3_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_3_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_3_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_3_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_3_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_3_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_3_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_3_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_3_SIZE (0x58000188) ***/
/*
 * Size of ARB 3.
 */
#define IAXXX_SRB_ARB_3_SIZE_ADDR 0x58000188
#define IAXXX_SRB_ARB_3_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_3_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_3_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_3_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_3_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_3_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_3_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_3_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_3_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_4_BASE_ADDR (0x5800018c) ***/
/*
 * Base Address of ARB 4.
 */
#define IAXXX_SRB_ARB_4_BASE_ADDR_ADDR 0x5800018c
#define IAXXX_SRB_ARB_4_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_4_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_4_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_4_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_4_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_4_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_4_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_4_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_4_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_4_SIZE (0x58000190) ***/
/*
 * Size of ARB 4.
 */
#define IAXXX_SRB_ARB_4_SIZE_ADDR 0x58000190
#define IAXXX_SRB_ARB_4_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_4_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_4_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_4_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_4_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_4_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_4_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_4_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_4_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_5_BASE_ADDR (0x58000194) ***/
/*
 * Base Address of ARB 5.
 */
#define IAXXX_SRB_ARB_5_BASE_ADDR_ADDR 0x58000194
#define IAXXX_SRB_ARB_5_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_5_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_5_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_5_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_5_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_5_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_5_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_5_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_5_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_5_SIZE (0x58000198) ***/
/*
 * Size of ARB 5.
 */
#define IAXXX_SRB_ARB_5_SIZE_ADDR 0x58000198
#define IAXXX_SRB_ARB_5_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_5_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_5_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_5_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_5_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_5_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_5_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_5_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_5_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_6_BASE_ADDR (0x5800019c) ***/
/*
 * Base Address of ARB 6.
 */
#define IAXXX_SRB_ARB_6_BASE_ADDR_ADDR 0x5800019c
#define IAXXX_SRB_ARB_6_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_6_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_6_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_6_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_6_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_6_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_6_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_6_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_6_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_6_SIZE (0x580001a0) ***/
/*
 * Size of ARB 6.
 */
#define IAXXX_SRB_ARB_6_SIZE_ADDR 0x580001a0
#define IAXXX_SRB_ARB_6_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_6_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_6_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_6_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_6_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_6_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_6_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_6_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_6_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_7_BASE_ADDR (0x580001a4) ***/
/*
 * Base Address of ARB 7.
 */
#define IAXXX_SRB_ARB_7_BASE_ADDR_ADDR 0x580001a4
#define IAXXX_SRB_ARB_7_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_7_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_7_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_7_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_7_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_7_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_7_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_7_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_7_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_7_SIZE (0x580001a8) ***/
/*
 * Size of ARB 7.
 */
#define IAXXX_SRB_ARB_7_SIZE_ADDR 0x580001a8
#define IAXXX_SRB_ARB_7_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_7_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_7_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_7_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_7_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_7_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_7_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_7_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_7_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_8_BASE_ADDR (0x580001ac) ***/
/*
 * Base Address of ARB 8.
 */
#define IAXXX_SRB_ARB_8_BASE_ADDR_ADDR 0x580001ac
#define IAXXX_SRB_ARB_8_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_8_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_8_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_8_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_8_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_8_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_8_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_8_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_8_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_8_SIZE (0x580001b0) ***/
/*
 * Size of ARB 8.
 */
#define IAXXX_SRB_ARB_8_SIZE_ADDR 0x580001b0
#define IAXXX_SRB_ARB_8_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_8_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_8_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_8_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_8_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_8_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_8_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_8_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_8_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_9_BASE_ADDR (0x580001b4) ***/
/*
 * Base Address of ARB 9.
 */
#define IAXXX_SRB_ARB_9_BASE_ADDR_ADDR 0x580001b4
#define IAXXX_SRB_ARB_9_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_9_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_9_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_9_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_9_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_9_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_9_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_9_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_9_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_9_SIZE (0x580001b8) ***/
/*
 * Size of ARB 9.
 */
#define IAXXX_SRB_ARB_9_SIZE_ADDR 0x580001b8
#define IAXXX_SRB_ARB_9_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_9_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_9_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_9_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_9_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_9_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_9_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_9_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_9_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_10_BASE_ADDR (0x580001bc) ***/
/*
 * Base Address of ARB 10.
 */
#define IAXXX_SRB_ARB_10_BASE_ADDR_ADDR 0x580001bc
#define IAXXX_SRB_ARB_10_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_10_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_10_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_10_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_10_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_10_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_10_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_10_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_10_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_10_SIZE (0x580001c0) ***/
/*
 * Size of ARB 10.
 */
#define IAXXX_SRB_ARB_10_SIZE_ADDR 0x580001c0
#define IAXXX_SRB_ARB_10_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_10_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_10_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_10_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_10_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_10_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_10_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_10_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_10_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_11_BASE_ADDR (0x580001c4) ***/
/*
 * Base Address of ARB 11.
 */
#define IAXXX_SRB_ARB_11_BASE_ADDR_ADDR 0x580001c4
#define IAXXX_SRB_ARB_11_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_11_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_11_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_11_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_11_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_11_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_11_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_11_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_11_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_11_SIZE (0x580001c8) ***/
/*
 * Size of ARB 11.
 */
#define IAXXX_SRB_ARB_11_SIZE_ADDR 0x580001c8
#define IAXXX_SRB_ARB_11_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_11_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_11_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_11_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_11_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_11_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_11_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_11_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_11_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_12_BASE_ADDR (0x580001cc) ***/
/*
 * Base Address of ARB 12.
 */
#define IAXXX_SRB_ARB_12_BASE_ADDR_ADDR 0x580001cc
#define IAXXX_SRB_ARB_12_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_12_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_12_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_12_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_12_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_12_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_12_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_12_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_12_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_12_SIZE (0x580001d0) ***/
/*
 * Size of ARB 12.
 */
#define IAXXX_SRB_ARB_12_SIZE_ADDR 0x580001d0
#define IAXXX_SRB_ARB_12_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_12_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_12_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_12_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_12_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_12_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_12_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_12_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_12_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_13_BASE_ADDR (0x580001d4) ***/
/*
 * Base Address of ARB 13.
 */
#define IAXXX_SRB_ARB_13_BASE_ADDR_ADDR 0x580001d4
#define IAXXX_SRB_ARB_13_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_13_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_13_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_13_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_13_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_13_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_13_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_13_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_13_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_13_SIZE (0x580001d8) ***/
/*
 * Size of ARB 13.
 */
#define IAXXX_SRB_ARB_13_SIZE_ADDR 0x580001d8
#define IAXXX_SRB_ARB_13_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_13_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_13_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_13_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_13_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_13_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_13_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_13_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_13_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_14_BASE_ADDR (0x580001dc) ***/
/*
 * Base Address of ARB 14.
 */
#define IAXXX_SRB_ARB_14_BASE_ADDR_ADDR 0x580001dc
#define IAXXX_SRB_ARB_14_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_14_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_14_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_14_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_14_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_14_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_14_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_14_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_14_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_14_SIZE (0x580001e0) ***/
/*
 * Size of ARB 14.
 */
#define IAXXX_SRB_ARB_14_SIZE_ADDR 0x580001e0
#define IAXXX_SRB_ARB_14_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_14_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_14_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_14_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_14_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_14_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_14_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_14_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_14_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_15_BASE_ADDR (0x580001e4) ***/
/*
 * Base Address of ARB 15.
 */
#define IAXXX_SRB_ARB_15_BASE_ADDR_ADDR 0x580001e4
#define IAXXX_SRB_ARB_15_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_15_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_15_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_15_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_15_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_15_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_15_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_15_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_15_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_15_SIZE (0x580001e8) ***/
/*
 * Size of ARB 15.
 */
#define IAXXX_SRB_ARB_15_SIZE_ADDR 0x580001e8
#define IAXXX_SRB_ARB_15_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_15_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_15_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_15_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_15_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_15_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_15_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_15_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_15_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_16_BASE_ADDR (0x580001ec) ***/
/*
 * Base Address of ARB 16.
 */
#define IAXXX_SRB_ARB_16_BASE_ADDR_ADDR 0x580001ec
#define IAXXX_SRB_ARB_16_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_16_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_16_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_16_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_16_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_16_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_16_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_16_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_16_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_16_SIZE (0x580001f0) ***/
/*
 * Size of ARB 16.
 */
#define IAXXX_SRB_ARB_16_SIZE_ADDR 0x580001f0
#define IAXXX_SRB_ARB_16_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_16_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_16_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_16_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_16_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_16_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_16_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_16_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_16_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_17_BASE_ADDR (0x580001f4) ***/
/*
 * Base Address of ARB 17.
 */
#define IAXXX_SRB_ARB_17_BASE_ADDR_ADDR 0x580001f4
#define IAXXX_SRB_ARB_17_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_17_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_17_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_17_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_17_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_17_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_17_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_17_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_17_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_17_SIZE (0x580001f8) ***/
/*
 * Size of ARB 17.
 */
#define IAXXX_SRB_ARB_17_SIZE_ADDR 0x580001f8
#define IAXXX_SRB_ARB_17_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_17_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_17_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_17_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_17_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_17_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_17_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_17_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_17_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_18_BASE_ADDR (0x580001fc) ***/
/*
 * Base Address of ARB 18.
 */
#define IAXXX_SRB_ARB_18_BASE_ADDR_ADDR 0x580001fc
#define IAXXX_SRB_ARB_18_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_18_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_18_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_18_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_18_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_18_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_18_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_18_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_18_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_18_SIZE (0x58000200) ***/
/*
 * Size of ARB 18.
 */
#define IAXXX_SRB_ARB_18_SIZE_ADDR 0x58000200
#define IAXXX_SRB_ARB_18_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_18_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_18_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_18_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_18_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_18_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_18_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_18_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_18_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_19_BASE_ADDR (0x58000204) ***/
/*
 * Base Address of ARB 19.
 */
#define IAXXX_SRB_ARB_19_BASE_ADDR_ADDR 0x58000204
#define IAXXX_SRB_ARB_19_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_19_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_19_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_19_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_19_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_19_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_19_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_19_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_19_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_19_SIZE (0x58000208) ***/
/*
 * Size of ARB 19.
 */
#define IAXXX_SRB_ARB_19_SIZE_ADDR 0x58000208
#define IAXXX_SRB_ARB_19_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_19_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_19_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_19_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_19_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_19_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_19_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_19_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_19_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_20_BASE_ADDR (0x5800020c) ***/
/*
 * Base Address of ARB 20.
 */
#define IAXXX_SRB_ARB_20_BASE_ADDR_ADDR 0x5800020c
#define IAXXX_SRB_ARB_20_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_20_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_20_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_20_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_20_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_20_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_20_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_20_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_20_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_20_SIZE (0x58000210) ***/
/*
 * Size of ARB 20.
 */
#define IAXXX_SRB_ARB_20_SIZE_ADDR 0x58000210
#define IAXXX_SRB_ARB_20_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_20_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_20_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_20_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_20_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_20_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_20_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_20_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_20_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_21_BASE_ADDR (0x58000214) ***/
/*
 * Base Address of ARB 21.
 */
#define IAXXX_SRB_ARB_21_BASE_ADDR_ADDR 0x58000214
#define IAXXX_SRB_ARB_21_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_21_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_21_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_21_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_21_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_21_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_21_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_21_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_21_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_21_SIZE (0x58000218) ***/
/*
 * Size of ARB 21.
 */
#define IAXXX_SRB_ARB_21_SIZE_ADDR 0x58000218
#define IAXXX_SRB_ARB_21_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_21_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_21_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_21_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_21_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_21_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_21_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_21_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_21_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_22_BASE_ADDR (0x5800021c) ***/
/*
 * Base Address of ARB 22.
 */
#define IAXXX_SRB_ARB_22_BASE_ADDR_ADDR 0x5800021c
#define IAXXX_SRB_ARB_22_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_22_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_22_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_22_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_22_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_22_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_22_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_22_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_22_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_22_SIZE (0x58000220) ***/
/*
 * Size of ARB 22.
 */
#define IAXXX_SRB_ARB_22_SIZE_ADDR 0x58000220
#define IAXXX_SRB_ARB_22_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_22_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_22_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_22_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_22_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_22_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_22_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_22_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_22_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_23_BASE_ADDR (0x58000224) ***/
/*
 * Base Address of ARB 23.
 */
#define IAXXX_SRB_ARB_23_BASE_ADDR_ADDR 0x58000224
#define IAXXX_SRB_ARB_23_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_23_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_23_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_23_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_23_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_23_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_23_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_23_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_23_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_23_SIZE (0x58000228) ***/
/*
 * Size of ARB 23.
 */
#define IAXXX_SRB_ARB_23_SIZE_ADDR 0x58000228
#define IAXXX_SRB_ARB_23_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_23_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_23_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_23_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_23_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_23_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_23_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_23_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_23_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_24_BASE_ADDR (0x5800022c) ***/
/*
 * Base Address of ARB 24.
 */
#define IAXXX_SRB_ARB_24_BASE_ADDR_ADDR 0x5800022c
#define IAXXX_SRB_ARB_24_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_24_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_24_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_24_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_24_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_24_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_24_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_24_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_24_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_24_SIZE (0x58000230) ***/
/*
 * Size of ARB 24.
 */
#define IAXXX_SRB_ARB_24_SIZE_ADDR 0x58000230
#define IAXXX_SRB_ARB_24_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_24_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_24_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_24_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_24_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_24_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_24_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_24_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_24_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_25_BASE_ADDR (0x58000234) ***/
/*
 * Base Address of ARB 25.
 */
#define IAXXX_SRB_ARB_25_BASE_ADDR_ADDR 0x58000234
#define IAXXX_SRB_ARB_25_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_25_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_25_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_25_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_25_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_25_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_25_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_25_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_25_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_25_SIZE (0x58000238) ***/
/*
 * Size of ARB 25
 */
#define IAXXX_SRB_ARB_25_SIZE_ADDR 0x58000238
#define IAXXX_SRB_ARB_25_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_25_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_25_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_25_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_25_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_25_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_25_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_25_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_25_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_26_BASE_ADDR (0x5800023c) ***/
/*
 * Base Address of ARB 26.
 */
#define IAXXX_SRB_ARB_26_BASE_ADDR_ADDR 0x5800023c
#define IAXXX_SRB_ARB_26_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_26_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_26_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_26_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_26_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_26_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_26_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_26_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_26_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_26_SIZE (0x58000240) ***/
/*
 * Size of ARB 26.
 */
#define IAXXX_SRB_ARB_26_SIZE_ADDR 0x58000240
#define IAXXX_SRB_ARB_26_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_26_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_26_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_26_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_26_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_26_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_26_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_26_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_26_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_27_BASE_ADDR (0x58000244) ***/
/*
 * Base Address of ARB 27.
 */
#define IAXXX_SRB_ARB_27_BASE_ADDR_ADDR 0x58000244
#define IAXXX_SRB_ARB_27_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_27_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_27_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_27_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_27_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_27_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_27_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_27_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_27_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_27_SIZE (0x58000248) ***/
/*
 * Size of ARB 27.
 */
#define IAXXX_SRB_ARB_27_SIZE_ADDR 0x58000248
#define IAXXX_SRB_ARB_27_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_27_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_27_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_27_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_27_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_27_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_27_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_27_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_27_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_28_BASE_ADDR (0x5800024c) ***/
/*
 * Base Address of ARB 28.
 */
#define IAXXX_SRB_ARB_28_BASE_ADDR_ADDR 0x5800024c
#define IAXXX_SRB_ARB_28_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_28_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_28_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_28_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_28_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_28_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_28_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_28_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_28_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_28_SIZE (0x58000250) ***/
/*
 * Size of ARB 28.
 */
#define IAXXX_SRB_ARB_28_SIZE_ADDR 0x58000250
#define IAXXX_SRB_ARB_28_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_28_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_28_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_28_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_28_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_28_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_28_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_28_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_28_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_29_BASE_ADDR (0x58000254) ***/
/*
 */
#define IAXXX_SRB_ARB_29_BASE_ADDR_ADDR 0x58000254
#define IAXXX_SRB_ARB_29_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_29_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_29_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_29_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_29_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_29_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_29_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_29_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_29_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_29_SIZE (0x58000258) ***/
/*
 * Size of ARB 29.
 */
#define IAXXX_SRB_ARB_29_SIZE_ADDR 0x58000258
#define IAXXX_SRB_ARB_29_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_29_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_29_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_29_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_29_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_29_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_29_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_29_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_29_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_30_BASE_ADDR (0x5800025c) ***/
/*
 * Base Address of ARB 31.
 */
#define IAXXX_SRB_ARB_30_BASE_ADDR_ADDR 0x5800025c
#define IAXXX_SRB_ARB_30_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_30_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_30_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_30_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_30_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_30_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_30_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_30_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_30_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_30_SIZE (0x58000260) ***/
/*
 * Size of ARB 30.
 */
#define IAXXX_SRB_ARB_30_SIZE_ADDR 0x58000260
#define IAXXX_SRB_ARB_30_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_30_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_30_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_30_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_30_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_30_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_30_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_30_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_30_SIZE_REG_DECL (31 : 0)

/*** SRB_ARB_31_BASE_ADDR (0x58000264) ***/
/*
 * Base Address of ARB 31.
 */
#define IAXXX_SRB_ARB_31_BASE_ADDR_ADDR 0x58000264
#define IAXXX_SRB_ARB_31_BASE_ADDR_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_31_BASE_ADDR_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_31_BASE_ADDR_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_31_BASE_ADDR_RESET_VAL 0x00000000

/*
 * Physical base address of this Application Register Block.
 * Used for virtual to physical address translation.
 * Base addresses of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_31_BASE_ADDR_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_31_BASE_ADDR_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_31_BASE_ADDR_REG_POS 0
#define IAXXX_SRB_ARB_31_BASE_ADDR_REG_SIZE 32
#define IAXXX_SRB_ARB_31_BASE_ADDR_REG_DECL (31 : 0)

/*** SRB_ARB_31_SIZE (0x58000268) ***/
/*
 * Size of ARB 31.
 */
#define IAXXX_SRB_ARB_31_SIZE_ADDR 0x58000268
#define IAXXX_SRB_ARB_31_SIZE_MASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_31_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_SRB_ARB_31_SIZE_WMASK_VAL 0x00000000
#define IAXXX_SRB_ARB_31_SIZE_RESET_VAL 0x00000000

/*
 * Size in bytes of this Application Register Block.
 * Sizes of unused blocks are set to 0x00000000.
 */
#define IAXXX_SRB_ARB_31_SIZE_REG_MASK 0xffffffff
#define IAXXX_SRB_ARB_31_SIZE_REG_RESET_VAL 0x0
#define IAXXX_SRB_ARB_31_SIZE_REG_POS 0
#define IAXXX_SRB_ARB_31_SIZE_REG_SIZE 32
#define IAXXX_SRB_ARB_31_SIZE_REG_DECL (31 : 0)

/* Number of registers in the module */
#define IAXXX_SRB_REG_NUM 155

#endif /* __IAXXX_REGISTER_DEFS_SRB_H__ */
